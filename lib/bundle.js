/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./lib/main.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./lib/codeFlower.js":
/*!***************************!*\
  !*** ./lib/codeFlower.js ***!
  \***************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nconst codeFlower = (graph) =>  {                                //the function d3.json receives another callback that contains an error variable. 'graph' is the graph we've been referring to.\n        // if (error) throw error;                                                     // throw error in case of error\n        d3.selectAll(\"svg > *\").remove();                       // clears the screen per continent button push\n\n\n    const svg = d3.select('svg'),                                       // make a selection selecting the svg\n        width = +svg.attr('width'),                                     // both are determined from 5 lines up\n        height = +svg.attr('height'),\n        color = d3.scaleOrdinal(d3.schemeCategory20)                    // add rainbow of colors for the nodes                       // color palette available          https://bl.ocks.org/pstuffa/3393ff2711a53975040077b7453781a9     https://d3-wiki.readthedocs.io/zh_CN/master/Ordinal-Scales/\n\n    let simulation = d3.forceSimulation()                             // call the function forceSimulation that creates the simulation object\n        .force('center', d3.forceCenter(width / 2, height / 2.5))         // 2. create forces. put the nodes (x, y) in the middle of the screen (half its width and height)\n        .force('collide', d3.forceCollide(function (d) { d.r * 1.5 }))  // 3. make sure the nodes don't collide      ?\n        .force('charge', d3.forceManyBody()\n        // .distanceMax(800)\n        .strength(-295)\n        )                                            // *** 4. the nodes repel: the higher the negative value (of force), the further they repel.\n        // // .distanceMin(800)\n        // .linkDistance(200)\n\n        .force('link', d3.forceLink()                                   // link force\n            // .strength(0.2)                                           // * link strength -- don't give them a strength unless you want a perfectly circular graph\n            .id(function (d) {\n                return d.id;                                            // the id for the link is a function: for each node, look at d's id\n            }))\n\n        .force(\"x\", d3.forceX(width / 2))                               // 2. create forces. put the nodes (x) in the middle of the screen (half its width)\n        // .force(\"x\", d3.forceX(function (d) {\n            // return byCountry(d.group);                               // separating the nodes by their ___ (group, in this case)\n        // }).strength(0.1))                                            // force of separation -- its push\n        .force(\"y\", d3.forceY(height / 2))                              // 3. create forces. put the nodes (y) in the middle of the screen (half its height)\n\n        // .force('link', d3.layout.force().linkDistance(20));\n\n    // simulation = d3.forceSimulation()\n    //     .force('charge', d3.forceManyBody()\n    //         // .distanceMax(800)\n    //         .strength(-205)\n    //     )                                            // *** 4. the nodes repel: the higher the negative value (of force), the further they repel.\n        // .distanceMin(800)\n    \n\n\n\n\n        const link = svg.append('g')                                                // g element groups SVG shapes together\n            .attr('class', 'links')\n            .selectAll('line')\n            .data(graph.links)\n            .enter().append('line')\n            .attr('stroke-width', function (d) { return Math.sqrt(d.value); });\n\n        const node = svg.append('g')\n            .attr('class', 'nodes')\n            .selectAll('g')\n            .data(graph.nodes)\n            .enter().append('g')\n\n        const circles = node.append('circle')\n            .attr('r', function (d) {\n                if ((d.r > 10) && (['Female', 'Adult', 'Gross', 'Adolescent', 'MMR'].includes(d.id.split(' ')[0]))) {\n                    return (Math.log10(d.r) * 10)\n                }\n                else if ((d.r > 10) && (!['Female', 'Adult', 'Gross', 'Adolescent', 'MMR'].includes(d.id.split(' ')[0]))) {\n                    return (d.r/2);\n                }\n                else {\n                    return d.r/2;       // indicators\n                };\n            })                                                              // https://stackoverflow.com/questions/20723564/d3-force-layout-how-do-i-set-the-size-of-every-node\n            .attr('fill', function (d) {                                    // color\n            //     if (d.group === 1000) {\n            //         return '#ffff00';\n            //     }\n            //     else {\n                    return color(d.group); \n            //     }\n            })\n            .attr('stroke', function (d) {                                    // color\n                if (['Female'].includes(d.id.split(' ')[0])) {\n                    return '#ffff00';\n                }\n                else if (['Adult'].includes(d.id.split(' ')[0])) {\n                    return '#e75480';\n                }\n                else if (['MMR'].includes(d.id.split(' ')[0])) {\n                    return '#000000';\n                }\n                else if (['Gross'].includes(d.id.split(' ')[0])) {\n                    return '#32CC32';\n                }\n                else {\n                    return '#red';\n                }\n            })\n            ;\n\n        const labels = node.append('text')\n            .text(function (d) {\n                if (['Female'].includes(d.id.split(' ')[0])) {\n                    return ('Youth ' + d.id.slice(0, 16) + 'Rate ' + d.r + '%');\n                }\n                else if (['Adult'].includes(d.id.split(' ')[0])) {\n                    return (d.id.slice(0, 6) + 'Female Literacy Rate ' + d.r + '%');\n                }\n                else if (['Gross'].includes(d.id.split(' ')[0])) {\n                    return (d.id.slice(0, 22) + d.r + ' per capita');\n                }\n                else if (['Adolescent'].includes(d.id.split(' ')[0])) {\n                    return (d.id.slice(0, 21) + 'Rate ' + d.r + '%');\n                }\n                else if (['MMR'].includes(d.id.split(' ')[0])) {\n                    return ('Maternal Mortality Rate (' + d.r + '/100000 live births)')\n                }\n                else {\n                    return d.id;\n                }\n\n            })\n            .attr('x', -28)                                               // location of text relative to node             // distance the lettering is from the node\n            .attr('y', -28)\n\n            .attr('class', function (d) {\n                if (['Female', 'Adult', 'Gross', 'MMR', 'Adolescent'].includes(d.id.split(' ')[0])) {\n                    return 'hidden';\n                }\n                else {\n                    return 'country-continent-world';\n                }\n            }\n            )\n            ;\n\n        const images = node.append('svg:image')             // append the country's flag to the country nodes\n            .attr('class', 'imgs')\n            .attr('xlink:href', function (d) {\n                return d.img;\n            })\n            .attr('x', function (d) { return -25; })\n            .attr('y', function (d) { return -25; })\n            .attr('height', 35)\n            .attr('width', 35);\n\n        node\n            .append('title')\n            .text(function (d) { return d.id; });\n\n        simulation\n            .nodes(graph.nodes)         // assign the simulation's nodes to be the graph's nodes\n            .on('tick', update)         // 1. update whenever the 'tick' is called (once per node creation) after getting data. tick event listener function update all nodes.\n            .force('link')              // links are just another force: get the force first\n            .links(graph.links);        // assign the simulation's links to be the graph's links\n\n        function update() {\n            node\n                .attr('transform', function (d) {\n                    // d.x = Math.max(d.r, Math.min(width - d.r, d.x));\n                    // d.y = Math.max(d.r, Math.min(height - d.r, d.y));\n                    return 'translate(' + d.x + ',' + d.y + ')';\n                })\n                // .attr(\"cx\", function (d) { \n                //     return d.x = Math.max(d.r, Math.min(width - d.r, d.x)); \n                // })\n                // .attr(\"cy\", function (d) { \n                //     return d.y = Math.max(d.r, Math.min(height - d.r, d.y)); \n                // })\n\n                .call(d3.drag()                                                         // ability to drag\n                    .on('start', startDrag)\n                    .on('drag', nowDrag)\n                    .on('end', stopDrag));\n\n            link\n                .attr('x1', function (d) { return d.source.x; })\n                .attr('y1', function (d) { return d.source.y; })\n                .attr('x2', function (d) { return d.target.x; })\n                .attr('y2', function (d) { return d.target.y; });\n        }\n    // };\n\n    function startDrag() {\n        if (!d3.event.active) {                     // *\n            simulation.alphaTarget(0.3).restart();  // alpha decays from 1 to 0 over 300 iterations. restart the simulation when choosing new way to group nodes (later)\n        }\n        d3.event.subject.fx = d3.event.subject.x;   // take a node (d3 event subject)\n        d3.event.subject.fy = d3.event.subject.y;\n        console.log(d3.event.subject);              // test: printing which node you picked up to console the node when labels not yet appended\n    }\n\n    function nowDrag() {\n        d3.event.subject.fx = d3.event.x;           // allows you to pick up AND move the node\n        d3.event.subject.fy = d3.event.y;\n    }\n\n    function stopDrag() {\n        if (!d3.event.active) {\n            simulation.alphaTarget(0.1);            // alpha at 0, no decay, then simulation never stops\n        }\n\n        d3.event.subject.fx = null;                 // *\n        d3.event.subject.fy = null;\n    }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (codeFlower);\n\n//# sourceURL=webpack:///./lib/codeFlower.js?");

/***/ }),

/***/ "./lib/main.js":
/*!*********************!*\
  !*** ./lib/main.js ***!
  \*********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _parseData__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./parseData */ \"./lib/parseData.js\");\n/* harmony import */ var _codeFlower__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./codeFlower */ \"./lib/codeFlower.js\");\n\n\n// const d3 = require('https://d3js.org/d3.v4.min.js');\n\n\nlet worldData = null;\nlet asiaData = null;\nlet europeData = null;\nlet africaData = null;\nlet northamericaData = null;\nlet southamericaData = null;\nlet oceaniaData = null;\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n\n    let continents = document.getElementsByClassName('btn');\n\n    for(let i = 0; i < continents.length; i++) {\n        continents[i].addEventListener('click', e => { renderData(e) });\n    }\n    \n\n    d3.json('lib/literacy.json', function (error, data) { \n        if (error) throw error;    \n        worldData = _parseData__WEBPACK_IMPORTED_MODULE_0__[\"world\"](data);\n        asiaData = _parseData__WEBPACK_IMPORTED_MODULE_0__[\"asia\"](data);\n        europeData = _parseData__WEBPACK_IMPORTED_MODULE_0__[\"europe\"](data);\n        africaData = _parseData__WEBPACK_IMPORTED_MODULE_0__[\"africa\"](data);\n        northamericaData = _parseData__WEBPACK_IMPORTED_MODULE_0__[\"northamerica\"](data);\n        southamericaData = _parseData__WEBPACK_IMPORTED_MODULE_0__[\"southamerica\"](data);\n        oceaniaData = _parseData__WEBPACK_IMPORTED_MODULE_0__[\"oceania\"](data);\n        // debugger\n\n        Object(_codeFlower__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(oceaniaData);\n        // the last line is THE default loading page\n    })\n    \n    // codeFlower('../literacy.json');\n});\n\n\n\nfunction renderData(e) {\n    switch (e.target.getAttribute('id')) {\n        case \"world\":\n            Object(_codeFlower__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(worldData);\n            break;\n        case \"asia\":\n            Object(_codeFlower__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(asiaData);\n            break;\n        case \"europe\":\n            Object(_codeFlower__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(europeData);\n            break;\n        case \"africa\":\n            Object(_codeFlower__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(africaData);\n            break;\n        case \"northamerica\":\n            Object(_codeFlower__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(northamericaData);\n            break;\n        case \"southamerica\":\n            Object(_codeFlower__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(southamericaData);\n            break;\n        case \"oceania\":\n            Object(_codeFlower__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(oceaniaData);\n            break;\n    }\n}\n\n//# sourceURL=webpack:///./lib/main.js?");

/***/ }),

/***/ "./lib/parseData.js":
/*!**************************!*\
  !*** ./lib/parseData.js ***!
  \**************************/
/*! exports provided: world, asia, europe, africa, northamerica, southamerica, oceania */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"world\", function() { return world; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"asia\", function() { return asia; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"europe\", function() { return europe; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"africa\", function() { return africa; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"northamerica\", function() { return northamerica; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"southamerica\", function() { return southamerica; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"oceania\", function() { return oceania; });\nconst world = (data) => {\n    const worldData = {\n        links: [\n            { \"source\": \"World\", \"target\": \"World\", \"value\": 1 },\n        ],\n        nodes: [\n            { \"id\": \"World\", \"group\": -1, \"r\": 1, \"img\": \"http://clipartmag.com/images/spinning-globe-gif-22.gif\" },\n            { \"id\": \"Africa\", \"group\": 0, \"r\": 1, \"img\": \"https://ze-africanews.com/wp-content/uploads/2016/10/Africa-Map-Large-transparent.png\" },\n            { \"id\": \"Europe\", \"group\": 0, \"r\": 1, \"img\": \"https://banner2.kisspng.com/20180426/hxe/kisspng-european-union-map-clip-art-continent-5ae24753540637.3402845015247788353442.jpg\" },\n            { \"id\": \"North America\", \"group\": 0, \"r\": 1, \"img\": \"https://upload.wikimedia.org/wikipedia/commons/thumb/a/ae/Naunion.svg/220px-Naunion.svg.png\" },\n            { \"id\": \"South America\", \"group\": 0, \"r\": 1, \"img\": \"https://banner2.kisspng.com/20180413/dhq/kisspng-south-america-latin-america-vector-map-drawing-aruba-5ad071c64df831.5462189715236100543194.jpg\" },\n            { \"id\": \"Asia\", \"group\": 0, \"r\": 1, \"img\": \"https://www.tritech.co.uk/media/map/asia.png\" },\n            { \"id\": \"Oceania\", \"group\": 0, \"r\": 1, \"img\": \"https://cdn.pixabay.com/photo/2013/07/12/17/00/continent-151644_960_720.png\" },\n        \n            { \"id\": \"Afghanistan\", \"group\": 1, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/afghanistan/flag-3d-round-500.png\" },\n            { \"id\": \"Albania\", \"group\": 2, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/albania/flag-3d-round-500.png\" },\n            { \"id\": \"Algeria\", \"group\": 3, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/algeria/flag-3d-round-500.png\" },\n            { \"id\": \"Andorra\", \"group\": 4, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/andorra/flag-3d-round-500.png\" },\n            { \"id\": \"Angola\", \"group\": 5, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/angola/flag-3d-round-500.png\" },\n            { \"id\": \"Antigua and Barbuda\", \"group\": 6, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/antigua-and-barbuda/flag-3d-round-500.png\" },\n            { \"id\": \"Argentina\", \"group\": 7, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/argentina/flag-3d-round-500.png\" },\n            { \"id\": \"Armenia\", \"group\": 8, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/armenia/flag-3d-round-500.png\" },\n            { \"id\": \"Australia\", \"group\": 9, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/australia/flag-3d-round-500.png\" },\n            { \"id\": \"Austria\", \"group\": 10, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/austria/flag-3d-round-500.png\" },\n            { \"id\": \"Azerbaijan\", \"group\": 11, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/azerbaijan/flag-3d-round-500.png\" },\n            { \"id\": \"Bahamas\", \"group\": 12, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/bahamas/flag-3d-round-500.png\" },\n            { \"id\": \"Bahrain\", \"group\": 13, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/bahrain/flag-3d-round-500.png\" },\n            { \"id\": \"Bangladesh\", \"group\": 14, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/bangladesh/flag-3d-round-500.png\" },\n            { \"id\": \"Barbados\", \"group\": 15, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/barbados/flag-3d-round-500.png\" },\n            { \"id\": \"Belarus\", \"group\": 16, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/belarus/flag-3d-round-500.png\" },\n            { \"id\": \"Belgium\", \"group\": 17, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/belgium/flag-3d-round-500.png\" },\n            { \"id\": \"Belize\", \"group\": 18, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/belize/flag-3d-round-500.png\" },\n            { \"id\": \"Benin\", \"group\": 19, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/benin/flag-3d-round-500.png\" },\n            { \"id\": \"Bermuda\", \"group\": 20, \"r\": 0, \"img\": \"https://cdn0.iconfinder.com/data/icons/world-flags-1/100/bermuda-2-256.png\" },\n            { \"id\": \"Bhutan\", \"group\": 21, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/bhutan/flag-3d-round-500.png\" },\n            { \"id\": \"Bolivia\", \"group\": 22, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/bolivia/flag-3d-round-500.png\" },\n            { \"id\": \"Bosnia and Herzegovina\", \"group\": 23, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/bosnia-and-herzegovina/flag-3d-round-500.png\" },\n            { \"id\": \"Botswana\", \"group\": 24, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/botswana/flag-3d-round-500.png\" },\n            { \"id\": \"Brazil\", \"group\": 25, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/brazil/flag-3d-round-500.png\" },\n            { \"id\": \"Brunei Darussalam\", \"group\": 26, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/brunei/flag-3d-round-500.png\" },\n            { \"id\": \"Bulgaria\", \"group\": 27, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/bulgaria/flag-3d-round-500.png\" },\n            { \"id\": \"Burkina Faso\", \"group\": 28, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/burkina-faso/flag-3d-round-500.png\" },\n            { \"id\": \"Burundi\", \"group\": 29, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/burundi/flag-3d-round-500.png\" },\n            { \"id\": \"Cambodia\", \"group\": 30, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/cambodia/flag-3d-round-500.png\" },\n            { \"id\": \"Cameroon\", \"group\": 31, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/cameroon/flag-3d-round-500.png\" },\n            { \"id\": \"Canada\", \"group\": 32, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/canada/flag-3d-round-500.png\" },\n            { \"id\": \"Cape Verde\", \"group\": 33, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/cape-verde/flag-3d-round-500.png\" },\n            { \"id\": \"Central African Republic\", \"group\": 34, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/central-african-republic/flag-3d-round-500.png\" },\n            { \"id\": \"Chad\", \"group\": 35, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/chad/flag-3d-round-500.png\" },\n            { \"id\": \"Chile\", \"group\": 36, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/chile/flag-3d-round-500.png\" },\n            { \"id\": \"China\", \"group\": 37, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/china/flag-3d-round-500.png\" },\n            { \"id\": \"Colombia\", \"group\": 38, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/colombia/flag-3d-round-500.png\" },\n            { \"id\": \"Comoros\", \"group\": 39, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/comoros/flag-3d-round-500.png\" },\n            { \"id\": \"Congo, Dem. Rep.\", \"group\": 40, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/congo-democratic-republic-of-the/flag-3d-round-500.png\" },\n            { \"id\": \"Congo, Rep.\", \"group\": 41, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/congo-republic-of-the/flag-3d-round-500.png\" },\n            { \"id\": \"Cook Islands\", \"group\": 42, \"r\": 0, \"img\": \"https://cdn0.iconfinder.com/data/icons/world-flags-1/100/cook_islands-2-256.png\" },\n            { \"id\": \"Costa Rica\", \"group\": 43, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/costa-rica/flag-3d-round-500.png\" },\n            { \"id\": \"Cote d'Ivoire\", \"group\": 44, \"r\": 0, \"img\": \"https://cdn0.iconfinder.com/data/icons/world-flags-1/100/Cote_dIvoire-2-256.png\" },\n            { \"id\": \"Croatia\", \"group\": 45, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/croatia/flag-3d-round-500.png\" },\n            { \"id\": \"Cuba\", \"group\": 46, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/cuba/flag-3d-round-500.png\" },\n            { \"id\": \"Cyprus\", \"group\": 47, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/cyprus/flag-3d-round-500.png\" },\n            { \"id\": \"Czech Republic\", \"group\": 48, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/czech-republic/flag-3d-round-500.png\" },\n            { \"id\": \"Denmark\", \"group\": 49, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/denmark/flag-3d-round-500.png\" },\n            { \"id\": \"Djibouti\", \"group\": 50, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/djibouti/flag-3d-round-500.png\" },\n            { \"id\": \"Dominica\", \"group\": 51, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/dominica/flag-3d-round-500.png\" },\n            { \"id\": \"Dominican Republic\", \"group\": 52, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/dominican-republic/flag-3d-round-500.png\" },\n            { \"id\": \"Ecuador\", \"group\": 53, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/ecuador/flag-3d-round-500.png\" },\n            { \"id\": \"Egypt\", \"group\": 54, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/egypt/flag-3d-round-500.png\" },\n            { \"id\": \"El Salvador\", \"group\": 55, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/el-salvador/flag-3d-round-500.png\" },\n            { \"id\": \"Equatorial Guinea\", \"group\": 56, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/equatorial-guinea/flag-3d-round-500.png\" },\n            { \"id\": \"Eritrea\", \"group\": 57, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/eritrea/flag-3d-round-500.png\" },\n            { \"id\": \"Estonia\", \"group\": 58, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/estonia/flag-3d-round-500.png\" },\n            { \"id\": \"Ethiopia\", \"group\": 59, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/ethiopia/flag-3d-round-500.png\" },\n            { \"id\": \"Fiji\", \"group\": 60, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/fiji/flag-3d-round-500.png\" },\n            { \"id\": \"Finland\", \"group\": 61, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/finland/flag-3d-round-500.png\" },\n            { \"id\": \"France\", \"group\": 62, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/france/flag-3d-round-500.png\" },\n            { \"id\": \"French Polynesia\", \"group\": 63, \"r\": 0, \"img\": \"https://cdn0.iconfinder.com/data/icons/world-flags-1/100/french_polynesia-2-512.png\" },\n            { \"id\": \"Gabon\", \"group\": 64, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/gabon/flag-3d-round-500.png\" },\n            { \"id\": \"Gambia\", \"group\": 65, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/gambia/flag-3d-round-500.png\" },\n            { \"id\": \"Georgia\", \"group\": 66, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/georgia/flag-3d-round-500.png\" },\n            { \"id\": \"Germany\", \"group\": 67, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/germany/flag-3d-round-500.png\" },\n            { \"id\": \"Ghana\", \"group\": 68, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/ghana/flag-3d-round-500.png\" },\n            { \"id\": \"Greece\", \"group\": 69, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/greece/flag-3d-round-500.png\" },\n            { \"id\": \"Grenada\", \"group\": 70, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/grenada/flag-3d-round-500.png\" },\n            { \"id\": \"Guatemala\", \"group\": 71, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/guatemala/flag-3d-round-500.png\" },\n            { \"id\": \"Guinea\", \"group\": 72, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/guinea/flag-3d-round-500.png\" },\n            { \"id\": \"Guinea-Bissau\", \"group\": 73, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/guinea-bissau/flag-3d-round-500.png\" },\n            { \"id\": \"Guyana\", \"group\": 74, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/guyana/flag-3d-round-500.png\" },\n            { \"id\": \"Haiti\", \"group\": 75, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/haiti/flag-3d-round-500.png\" },\n            { \"id\": \"Honduras\", \"group\": 76, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/honduras/flag-3d-round-500.png\" },\n            { \"id\": \"Hong Kong, China\", \"group\": 77, \"r\": 0, \"img\": \"https://cdn0.iconfinder.com/data/icons/world-flags-1/100/Hong_Kong-2-256.png\" },\n            { \"id\": \"Hungary\", \"group\": 78, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/hungary/flag-3d-round-500.png\" },\n            { \"id\": \"Iceland\", \"group\": 79, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/iceland/flag-3d-round-500.png\" },\n            { \"id\": \"India\", \"group\": 80, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/india/flag-3d-round-500.png\" },\n            { \"id\": \"Indonesia\", \"group\": 81, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/indonesia/flag-3d-round-500.png\" },\n            { \"id\": \"Iran (Islamic Republic of)\", \"group\": 82, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/iran/flag-3d-round-500.png\" },\n            { \"id\": \"Iraq\", \"group\": 83, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/iraq/flag-3d-round-500.png\" },\n            { \"id\": \"Ireland\", \"group\": 84, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/ireland/flag-3d-round-500.png\" },\n            { \"id\": \"Israel\", \"group\": 85, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/israel/flag-3d-round-500.png\" },\n            { \"id\": \"Italy\", \"group\": 86, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/italy/flag-3d-round-500.png\" },\n            { \"id\": \"Jamaica\", \"group\": 87, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/jamaica/flag-3d-round-500.png\" },\n            { \"id\": \"Japan\", \"group\": 88, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/japan/flag-3d-round-500.png\" },\n            { \"id\": \"Jordan\", \"group\": 89, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/jordan/flag-3d-round-500.png\" },\n            { \"id\": \"Kazakhstan\", \"group\": 90, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/kazakhstan/flag-3d-round-500.png\" },\n            { \"id\": \"Kenya\", \"group\": 91, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/kenya/flag-3d-round-500.png\" },\n            { \"id\": \"Kiribati\", \"group\": 92, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/kiribati/flag-3d-round-500.png\" },\n            { \"id\": \"Korea, Dem. Rep.\", \"group\": 93, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/north-korea/flag-3d-round-500.png\" },\n            { \"id\": \"Korea, Rep.\", \"group\": 94, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/south-korea/flag-3d-round-500.png\" },\n            { \"id\": \"Kuwait\", \"group\": 95, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/kuwait/flag-3d-round-500.png\" },\n            { \"id\": \"Kyrgyzstan\", \"group\": 96, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/kyrgyzstan/flag-3d-round-500.png\" },\n            { \"id\": \"Lao People's Democratic Republic\", \"group\": 97, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/laos/flag-3d-round-500.png\" },\n            { \"id\": \"Latvia\", \"group\": 98, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/latvia/flag-3d-round-500.png\" },\n            { \"id\": \"Lebanon\", \"group\": 99, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/lebanon/flag-3d-round-500.png\" },\n            { \"id\": \"Lesotho\", \"group\": 100, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/lesotho/flag-3d-round-500.png\" },\n            { \"id\": \"Liberia\", \"group\": 101, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/liberia/flag-3d-round-500.png\" },\n            { \"id\": \"Libyan Arab Jamahiriya\", \"group\": 102, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/libya/flag-3d-round-500.png\" },\n            { \"id\": \"Lithuania\", \"group\": 103, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/lithuania/flag-3d-round-500.png\" },\n            { \"id\": \"Luxembourg\", \"group\": 104, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/luxembourg/flag-3d-round-500.png\" },\n            { \"id\": \"Macao, China\", \"group\": 105, \"r\": 0, \"img\": \"https://cdn2.iconfinder.com/data/icons/flags-circle-3d/100/Macau-512.png\" },\n            { \"id\": \"Macedonia\", \"group\": 106, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/macedonia/flag-3d-round-500.png\" },\n            { \"id\": \"Madagascar\", \"group\": 107, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/madagascar/flag-3d-round-500.png\" },\n            { \"id\": \"Malawi\", \"group\": 108, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/malawi/flag-3d-round-500.png\" },\n            { \"id\": \"Malaysia\", \"group\": 109, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/malaysia/flag-3d-round-500.png\" },\n            { \"id\": \"Maldives\", \"group\": 110, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/maldives/flag-3d-round-500.png\" },\n            { \"id\": \"Mali\", \"group\": 111, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/mali/flag-3d-round-500.png\" },\n            { \"id\": \"Malta\", \"group\": 112, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/malta/flag-3d-round-500.png\" },\n            { \"id\": \"Marshall Islands\", \"group\": 113, \"r\": 0, \"img\": \"https://cdn0.iconfinder.com/data/icons/world-flags-1/100/marshall_islands-2-256.png\" },\n            { \"id\": \"Mauritania\", \"group\": 114, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/mauritania/flag-3d-round-500.png\" },\n            { \"id\": \"Mauritius\", \"group\": 115, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/mauritius/flag-3d-round-500.png\" },\n            { \"id\": \"Mexico\", \"group\": 116, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/mexico/flag-3d-round-500.png\" },\n            { \"id\": \"Micronesia (Federated States of)\", \"group\": 117, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/micronesia/flag-3d-round-500.png\" },\n            { \"id\": \"Moldova\", \"group\": 118, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/moldova/flag-3d-round-500.png\" },\n            { \"id\": \"Monaco\", \"group\": 119, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/monaco/flag-3d-round-500.png\" },\n            { \"id\": \"Mongolia\", \"group\": 120, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/mongolia/flag-3d-round-500.png\" },\n            { \"id\": \"Montenegro\", \"group\": 121, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/montenegro/flag-3d-round-500.png\" },\n            { \"id\": \"Morocco\", \"group\": 122, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/morocco/flag-3d-round-500.png\" },\n            { \"id\": \"Mozambique\", \"group\": 123, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/mozambique/flag-3d-round-500.png\" },\n            { \"id\": \"Myanmar\", \"group\": 124, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/myanmar/flag-3d-round-500.png\" },\n            { \"id\": \"Namibia\", \"group\": 125, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/namibia/flag-3d-round-500.png\" },\n            { \"id\": \"Nauru\", \"group\": 126, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/nauru/flag-3d-round-500.png\" },\n            { \"id\": \"Nepal\", \"group\": 127, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/nepal/flag-3d-round-500.png\" },\n            { \"id\": \"Netherlands\", \"group\": 128, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/netherlands/flag-3d-round-500.png\" },\n            { \"id\": \"Netherlands Antilles\", \"group\": 129, \"r\": 0, \"img\": \"https://cdn0.iconfinder.com/data/icons/world-flags-1/100/netherlands_antilles-2-256.png\" },\n            { \"id\": \"New Caledonia\", \"group\": 130, \"r\": 0, \"img\": \"https://cdn0.iconfinder.com/data/icons/world-flags-1/100/New_Caledonia-2-256.png\" },\n            { \"id\": \"New Zealand\", \"group\": 131, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/new-zealand/flag-3d-round-500.png\" },\n            { \"id\": \"Nicaragua\", \"group\": 132, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/nicaragua/flag-3d-round-500.png\" },\n            { \"id\": \"Niger\", \"group\": 133, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/niger/flag-3d-round-500.png\" },\n            { \"id\": \"Nigeria\", \"group\": 134, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/nigeria/flag-3d-round-500.png\" },\n            { \"id\": \"Niue\", \"group\": 135, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/niue/flag-3d-round-500.png\" },\n            { \"id\": \"Norway\", \"group\": 136, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/norway/flag-3d-round-500.png\" },\n            { \"id\": \"Oman\", \"group\": 137, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/oman/flag-3d-round-500.png\" },\n            { \"id\": \"Pakistan\", \"group\": 138, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/pakistan/flag-3d-round-500.png\" },\n            { \"id\": \"Palau\", \"group\": 139, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/palau/flag-3d-round-500.png\" },\n            { \"id\": \"Panama\", \"group\": 140, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/panama/flag-3d-round-500.png\" },\n            { \"id\": \"Papua New Guinea\", \"group\": 141, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/papua-new-guinea/flag-3d-round-500.png\" },\n            { \"id\": \"Paraguay\", \"group\": 142, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/paraguay/flag-3d-round-500.png\" },\n            { \"id\": \"Peru\", \"group\": 143, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/peru/flag-3d-round-500.png\" },\n            { \"id\": \"Philippines\", \"group\": 144, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/philippines/flag-3d-round-500.png\" },\n            { \"id\": \"Poland\", \"group\": 145, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/poland/flag-3d-round-500.png\" },\n            { \"id\": \"Portugal\", \"group\": 146, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/portugal/flag-3d-round-500.png\" },\n            { \"id\": \"Puerto Rico\", \"group\": 147, \"r\": 0, \"img\": \"https://cdn0.iconfinder.com/data/icons/world-flags-1/100/Puerto_Rico-2-256.png\" },\n            { \"id\": \"Qatar\", \"group\": 148, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/qatar/flag-3d-round-500.png\" },\n            { \"id\": \"Romania\", \"group\": 149, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/romania/flag-3d-round-500.png\" },\n            { \"id\": \"Russia\", \"group\": 150, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/russia/flag-3d-round-500.png\" },\n            { \"id\": \"Rwanda\", \"group\": 151, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/rwanda/flag-3d-round-500.png\" },\n            { \"id\": \"Saint Kitts and Nevis\", \"group\": 152, \"r\": 0, \"img\": \"https://cdn0.iconfinder.com/data/icons/world-flags-1/100/Saint_Kitts_and_Nevis-2-256.png\" },\n            { \"id\": \"Saint Lucia\", \"group\": 153, \"r\": 0, \"img\": \"https://cdn0.iconfinder.com/data/icons/world-flags-1/100/Saint_Lucia-2-256.png\" },\n            { \"id\": \"Saint Vincent and the Grenadines\", \"group\": 154, \"r\": 0, \"img\": \"https://cdn0.iconfinder.com/data/icons/world-flags-1/100/Saint_Vincent_and_the_Grenadines-2-256.png\" },\n            { \"id\": \"Samoa\", \"group\": 155, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/samoa/flag-3d-round-500.png\" },\n            { \"id\": \"San Marino\", \"group\": 156, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/san-marino/flag-3d-round-500.png\" },\n            { \"id\": \"Sao Tome and Principe\", \"group\": 157, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/sao-tome-and-principe/flag-3d-round-500.png\" },\n            { \"id\": \"Saudi Arabia\", \"group\": 158, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/saudi-arabia/flag-3d-round-500.png\" },\n            { \"id\": \"Senegal\", \"group\": 159, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/senegal/flag-3d-round-500.png\" },\n            { \"id\": \"Serbia\", \"group\": 160, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/serbia/flag-3d-round-500.png\" },\n            { \"id\": \"Seychelles\", \"group\": 161, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/seychelles/flag-3d-round-500.png\" },\n            { \"id\": \"Sierra Leone\", \"group\": 162, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/sierra-leone/flag-3d-round-500.png\" },\n            { \"id\": \"Singapore\", \"group\": 163, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/singapore/flag-3d-round-500.png\" },\n            { \"id\": \"Slovakia\", \"group\": 164, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/slovakia/flag-3d-round-500.png\" },\n            { \"id\": \"Slovenia\", \"group\": 165, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/slovenia/flag-3d-round-500.png\" },\n            { \"id\": \"Solomon Islands\", \"group\": 166, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/solomon-islands/flag-3d-round-500.png\" },\n            { \"id\": \"Somalia\", \"group\": 167, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/somalia/flag-3d-round-500.png\" },\n            { \"id\": \"South Africa\", \"group\": 168, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/south-africa/flag-3d-round-500.png\" },\n            { \"id\": \"Spain\", \"group\": 169, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/spain/flag-3d-round-500.png\" },\n            { \"id\": \"Sri Lanka\", \"group\": 170, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/sri-lanka/flag-3d-round-500.png\" },\n            { \"id\": \"Sudan\", \"group\": 171, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/sudan/flag-3d-round-500.png\" },\n            { \"id\": \"Suriname\", \"group\": 172, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/suriname/flag-3d-round-500.png\" },\n            { \"id\": \"Swaziland\", \"group\": 173, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/swaziland/flag-3d-round-500.png\" },\n            { \"id\": \"Sweden\", \"group\": 174, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/sweden/flag-3d-round-500.png\" },\n            { \"id\": \"Switzerland\", \"group\": 175, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/switzerland/flag-3d-round-500.png\" },\n            { \"id\": \"Syria\", \"group\": 176, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/syria/flag-3d-round-500.png\" },\n            { \"id\": \"Taiwan\", \"group\": 177, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/taiwan/flag-3d-round-500.png\" },\n            { \"id\": \"Tajikistan\", \"group\": 178, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/tajikistan/flag-3d-round-500.png\" },\n            { \"id\": \"Tanzania\", \"group\": 179, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/tanzania/flag-3d-round-500.png\" },\n            { \"id\": \"Thailand\", \"group\": 180, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/thailand/flag-3d-round-500.png\" },\n            { \"id\": \"Timor-Leste\", \"group\": 181, \"r\": 0, \"img\": \"https://cdn0.iconfinder.com/data/icons/world-flags-1/100/east_timor-2-256.png\" },\n            { \"id\": \"Togo\", \"group\": 182, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/togo/flag-3d-round-500.png\" },\n            { \"id\": \"Tonga\", \"group\": 183, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/tonga/flag-3d-round-500.png\" },\n            { \"id\": \"Trinidad and Tobago\", \"group\": 184, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/trinidad-and-tobago/flag-3d-round-500.png\" },\n            { \"id\": \"Tunisia\", \"group\": 185, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/tunisia/flag-3d-round-500.png\" },\n            { \"id\": \"Turkey\", \"group\": 186, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/turkey/flag-3d-round-500.png\" },\n            { \"id\": \"Turkmenistan\", \"group\": 187, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/turkmenistan/flag-3d-round-500.png\" },\n            { \"id\": \"Tuvalu\", \"group\": 188, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/tuvalu/flag-3d-round-500.png\" },\n            { \"id\": \"Uganda\", \"group\": 189, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/uganda/flag-3d-round-500.png\" },\n            { \"id\": \"Ukraine\", \"group\": 190, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/ukraine/flag-3d-round-500.png\" },\n            { \"id\": \"United Arab Emirates\", \"group\": 191, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/united-arab-emirates/flag-3d-round-500.png\" },\n            { \"id\": \"United Kingdom\", \"group\": 192, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/united-kingdom/flag-3d-round-500.png\" },\n            { \"id\": \"United States of America\", \"group\": 193, \"r\": 0, \"img\": \"https://cdn0.iconfinder.com/data/icons/world-flags-1/100/USA_-4-256.png\" },\n            { \"id\": \"Uruguay\", \"group\": 194, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/uruguay/flag-3d-round-500.png\" },\n            { \"id\": \"Uzbekistan\", \"group\": 195, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/uzbekistan/flag-3d-round-500.png\" },\n            { \"id\": \"Vanuatu\", \"group\": 196, \"r\": 0, \"img\": \"https://cdn0.iconfinder.com/data/icons/world-flags-1/100/vanuatu-2-256.png\" },\n            { \"id\": \"Venezuela\", \"group\": 197, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/venezuela/flag-3d-round-500.png\" },\n            { \"id\": \"Vietnam\", \"group\": 198, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/vietnam/flag-3d-round-500.png\" },\n            { \"id\": \"West Bank and Gaza\", \"group\": 199, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/palestine/flag-3d-round-500.png\" },\n            { \"id\": \"Yemen\", \"group\": 200, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/yemen/flag-3d-round-500.png\" },\n            { \"id\": \"Zambia\", \"group\": 201, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/zambia/flag-3d-round-500.png\" },\n            { \"id\": \"Zimbabwe\", \"group\": 202, \"r\": 0, \"img\": \"https://cdn.countryflags.com/thumbs/zimbabwe/flag-3d-round-500.png\" },\n        ]\n    }\n\n    return worldData;\n}\n\nconst asia = (data) => {\n    \n    // asiaData is the ultimate object we'd like to return\n    // asiaData = {nodes: {\n                //     id: Afghanistan,                             \n                //     id: AfghanistanFactor1, \n                //     id: AfghanistanFactor2, \n                //     id: AfghanistanFactor34\n                // }, \n                // links: {\n                //     src Asia--targ Afghanistan,                  // STEP 1\n                //     src Afghanistan--targ AfghanistanFactor1,    // STEP 2\n                //     src Afghanistan--targ AfghanistanFactor2,\n                //     src Afghanistan--targ AfghanistanFactor3,\n                // }}\n\n    // as we go through the continents, just change lines: 1, 21, 28\n    const continentData = {\n        links: [],\n        nodes: [\n            { \"id\": \"Asia\", \"group\": 0, \"r\": 1, \"img\": \"https://www.tritech.co.uk/media/map/asia.png\" }\n        ]\n    }\n\n    ////////////////////////////////////// LINKS //////////////////////////////////////\n    // STEP 1: find all links where the continent connects to the country\n    const continentCountries =  data.links.filter((d) => {\n        return d.source == 'Asia';\n    });\n\n    // STEP 2: for each country on that continent, find all links where factors connect to the country\n    let continentTargets = [];\n    \n    for (let i = 0; i < continentCountries.length; i++) {\n        let country = continentCountries[i];\n\n        let countryFactors = data.links.filter((d) => {\n            return country.target == d.source;\n        })\n\n        continentTargets = continentTargets.concat(countryFactors);\n    }\n\n    ////////////////////////////////////// NODES //////////////////////////////////////\n    // STEP 3: for each country on that continent, \n    let continentNodes = [];\n    for (let i = 0; i < continentCountries.length; i++) {\n        let countryNodes = data.nodes.filter((d) => {\n            \n            // return (d.id.includes(continentTargets[i].source));\n            return (d.id == continentCountries[i].target);\n        });\n\n        continentNodes = continentNodes.concat(countryNodes);\n    }\n\n    let continentFactorNodes = [];\n    for (let i = 0; i < continentNodes.length; i++) {\n        let countryFactorNodes = data.nodes.filter((d) => {\n            return d.group == continentNodes[i].group;\n        })\n        continentFactorNodes = continentFactorNodes.concat(countryFactorNodes);\n        // debugger\n    }\n\n    continentData.links = continentData.links.concat(continentCountries, continentTargets);\n    continentData.nodes = continentData.nodes.concat(continentNodes, continentFactorNodes);\n    \n    return continentData;\n}\n\nconst europe = (data) => {\n\n    const continentData = {\n        links: [],\n        nodes: [\n            { \"id\": \"Europe\", \"group\": 0, \"r\": 1, \"img\": \"https://banner2.kisspng.com/20180426/hxe/kisspng-european-union-map-clip-art-continent-5ae24753540637.3402845015247788353442.jpg\" }\n        ]\n    }\n\n    ////////////////////////////////////// LINKS //////////////////////////////////////\n    // STEP 1: find all links where the continent connects to the country\n    const continentCountries = data.links.filter((d) => {\n        return d.source == 'Europe';\n    });\n\n    // STEP 2: for each country on that continent, find all links where factors connect to the country\n    let continentTargets = [];\n\n    for (let i = 0; i < continentCountries.length; i++) {\n        let country = continentCountries[i];\n\n        let countryFactors = data.links.filter((d) => {\n            return country.target == d.source;\n        })\n\n        continentTargets = continentTargets.concat(countryFactors);\n    }\n\n    ////////////////////////////////////// NODES //////////////////////////////////////\n    // STEP 3: for each country on that continent, \n    let continentNodes = [];\n    for (let i = 0; i < continentCountries.length; i++) {\n        let countryNodes = data.nodes.filter((d) => {\n\n            // return (d.id.includes(continentTargets[i].source));\n            return (d.id == continentCountries[i].target);\n        });\n\n        continentNodes = continentNodes.concat(countryNodes);\n    }\n\n    let continentFactorNodes = [];\n    for (let i = 0; i < continentNodes.length; i++) {\n        let countryFactorNodes = data.nodes.filter((d) => {\n            return d.group == continentNodes[i].group;\n        })\n        continentFactorNodes = continentFactorNodes.concat(countryFactorNodes);\n    }\n\n    continentData.links = continentData.links.concat(continentCountries, continentTargets);\n    continentData.nodes = continentData.nodes.concat(continentNodes, continentFactorNodes);\n\n    return continentData;\n}\n\nconst africa = (data) => {\n\n    const continentData = {\n        links: [],\n        nodes: [\n            { \"id\": \"Africa\", \"group\": 0, \"r\": 1, \"img\": \"https://ze-africanews.com/wp-content/uploads/2016/10/Africa-Map-Large-transparent.png\" },\n        ]\n    }\n\n    ////////////////////////////////////// LINKS //////////////////////////////////////\n    // STEP 1: find all links where the continent connects to the country\n    const continentCountries = data.links.filter((d) => {\n        return d.source == 'Africa';\n    });\n\n    // STEP 2: for each country on that continent, find all links where factors connect to the country\n    let continentTargets = [];\n\n    for (let i = 0; i < continentCountries.length; i++) {\n        let country = continentCountries[i];\n\n        let countryFactors = data.links.filter((d) => {\n            return country.target == d.source;\n        })\n\n        continentTargets = continentTargets.concat(countryFactors);\n    }\n\n    ////////////////////////////////////// NODES //////////////////////////////////////\n    // STEP 3: for each country on that continent, \n    let continentNodes = [];\n    for (let i = 0; i < continentCountries.length; i++) {\n        let countryNodes = data.nodes.filter((d) => {\n\n            // return (d.id.includes(continentTargets[i].source));\n            return (d.id == continentCountries[i].target);\n        });\n\n        continentNodes = continentNodes.concat(countryNodes);\n    }\n\n    let continentFactorNodes = [];\n    for (let i = 0; i < continentNodes.length; i++) {\n        let countryFactorNodes = data.nodes.filter((d) => {\n            return d.group == continentNodes[i].group;\n        })\n        continentFactorNodes = continentFactorNodes.concat(countryFactorNodes);\n    }\n\n    continentData.links = continentData.links.concat(continentCountries, continentTargets);\n    continentData.nodes = continentData.nodes.concat(continentNodes, continentFactorNodes);\n\n    return continentData;\n}\n\nconst northamerica = (data) => {\n\n    const continentData = {\n        links: [],\n        nodes: [\n            { \"id\": \"North America\", \"group\": 0, \"r\": 1, \"img\": \"https://upload.wikimedia.org/wikipedia/commons/thumb/a/ae/Naunion.svg/220px-Naunion.svg.png\" },\n        ]\n    }\n\n    ////////////////////////////////////// LINKS //////////////////////////////////////\n    // STEP 1: find all links where the continent connects to the country\n    const continentCountries = data.links.filter((d) => {\n        return d.source == 'North America';\n    });\n\n    // STEP 2: for each country on that continent, find all links where factors connect to the country\n    let continentTargets = [];\n\n    for (let i = 0; i < continentCountries.length; i++) {\n        let country = continentCountries[i];\n\n        let countryFactors = data.links.filter((d) => {\n            return country.target == d.source;\n        })\n\n        continentTargets = continentTargets.concat(countryFactors);\n    }\n\n    ////////////////////////////////////// NODES //////////////////////////////////////\n    // STEP 3: for each country on that continent, \n    let continentNodes = [];\n    for (let i = 0; i < continentCountries.length; i++) {\n        let countryNodes = data.nodes.filter((d) => {\n\n            // return (d.id.includes(continentTargets[i].source));\n            return (d.id == continentCountries[i].target);\n        });\n\n        continentNodes = continentNodes.concat(countryNodes);\n    }\n\n    let continentFactorNodes = [];\n    for (let i = 0; i < continentNodes.length; i++) {\n        let countryFactorNodes = data.nodes.filter((d) => {\n            return d.group == continentNodes[i].group;\n        })\n        continentFactorNodes = continentFactorNodes.concat(countryFactorNodes);\n    }\n\n    continentData.links = continentData.links.concat(continentCountries, continentTargets);\n    continentData.nodes = continentData.nodes.concat(continentNodes, continentFactorNodes);\n\n    return continentData;\n}\n\nconst southamerica = (data) => {\n\n    const continentData = {\n        links: [],\n        nodes: [\n            { \"id\": \"South America\", \"group\": 0, \"r\": 1, \"img\": \"https://banner2.kisspng.com/20180413/dhq/kisspng-south-america-latin-america-vector-map-drawing-aruba-5ad071c64df831.5462189715236100543194.jpg\" },\n        ]\n    }\n\n    ////////////////////////////////////// LINKS //////////////////////////////////////\n    // STEP 1: find all links where the continent connects to the country\n    const continentCountries = data.links.filter((d) => {\n        return d.source == 'South America';\n    });\n\n    // STEP 2: for each country on that continent, find all links where factors connect to the country\n    let continentTargets = [];\n\n    for (let i = 0; i < continentCountries.length; i++) {\n        let country = continentCountries[i];\n\n        let countryFactors = data.links.filter((d) => {\n            return country.target == d.source;\n        })\n\n        continentTargets = continentTargets.concat(countryFactors);\n    }\n\n    ////////////////////////////////////// NODES //////////////////////////////////////\n    // STEP 3: for each country on that continent, \n    let continentNodes = [];\n    for (let i = 0; i < continentCountries.length; i++) {\n        let countryNodes = data.nodes.filter((d) => {\n\n            // return (d.id.includes(continentTargets[i].source));\n            return (d.id == continentCountries[i].target);\n        });\n\n        continentNodes = continentNodes.concat(countryNodes);\n    }\n\n    let continentFactorNodes = [];\n    for (let i = 0; i < continentNodes.length; i++) {\n        let countryFactorNodes = data.nodes.filter((d) => {\n            return d.group == continentNodes[i].group;\n        })\n        continentFactorNodes = continentFactorNodes.concat(countryFactorNodes);\n    }\n\n    continentData.links = continentData.links.concat(continentCountries, continentTargets);\n    continentData.nodes = continentData.nodes.concat(continentNodes, continentFactorNodes);\n\n    return continentData;\n}\n\nconst oceania = (data) => {\n\n    const continentData = {\n        links: [],\n        nodes: [\n            { \"id\": \"Oceania\", \"group\": 0, \"r\": 1, \"img\": \"https://cdn.pixabay.com/photo/2013/07/12/17/00/continent-151644_960_720.png\" },\n        ]\n    }\n\n    ////////////////////////////////////// LINKS //////////////////////////////////////\n    // STEP 1: find all links where the continent connects to the country\n    const continentCountries = data.links.filter((d) => {\n        return d.source == 'Oceania';\n    });\n\n    // STEP 2: for each country on that continent, find all links where factors connect to the country\n    let continentTargets = [];\n\n    for (let i = 0; i < continentCountries.length; i++) {\n        let country = continentCountries[i];\n\n        let countryFactors = data.links.filter((d) => {\n            return country.target == d.source;\n        })\n\n        continentTargets = continentTargets.concat(countryFactors);\n    }\n\n    ////////////////////////////////////// NODES //////////////////////////////////////\n    // STEP 3: for each country on that continent, \n    let continentNodes = [];\n    for (let i = 0; i < continentCountries.length; i++) {\n        let countryNodes = data.nodes.filter((d) => {\n\n            // return (d.id.includes(continentTargets[i].source));\n            return (d.id == continentCountries[i].target);\n        });\n\n        continentNodes = continentNodes.concat(countryNodes);\n    }\n\n    let continentFactorNodes = [];\n    for (let i = 0; i < continentNodes.length; i++) {\n        let countryFactorNodes = data.nodes.filter((d) => {\n            return d.group == continentNodes[i].group;\n        })\n        continentFactorNodes = continentFactorNodes.concat(countryFactorNodes);\n    }\n\n    continentData.links = continentData.links.concat(continentCountries, continentTargets);\n    continentData.nodes = continentData.nodes.concat(continentNodes, continentFactorNodes);\n\n    return continentData;\n}\n\n//# sourceURL=webpack:///./lib/parseData.js?");

/***/ })

/******/ });